package br.com.gssoftwares.aulasegunda.views.eventos;

import br.com.gssoftwares.aulasegunda.model.Evento;
import br.com.gssoftwares.aulasegunda.model.Inscricao;
import br.com.gssoftwares.aulasegunda.model.Template;
import br.com.gssoftwares.aulasegunda.service.EventoService;
import br.com.gssoftwares.aulasegunda.service.InscricaoService;
import br.com.gssoftwares.aulasegunda.utils.ViewUtils;
import java.util.List;
import java.util.Objects;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gustavo Steinhoefel
 */
public class CadastroEventos extends javax.swing.JInternalFrame {

    private Evento entity = null;
    private List<Inscricao> listaInscricoes;
    private Inscricao selectInscricao;
    private JDesktopPane desktopPane;
    private List<Template> listaTemplate;

    /**
     * Creates new form NewJInternalFrame
     */
    public CadastroEventos(JDesktopPane desktopPane) {
        this.desktopPane = desktopPane;
        initComponents();
        jPanelInscricoes.setVisible(false);
        populateComboBox(templateComboBox);
    }

    public CadastroEventos(JDesktopPane desktopPane, Evento entity) {
        this.entity = entity;
        this.desktopPane = desktopPane;
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        codigoEventoText = new javax.swing.JTextField();
        nomeEventoText = new javax.swing.JTextField();
        descricaoEventoText = new javax.swing.JTextField();
        recarregarEvento = new javax.swing.JButton();
        salvarEvento = new javax.swing.JButton();
        fecharEvento = new javax.swing.JButton();
        cargaHorariaText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        templateComboBox = new javax.swing.JComboBox<>();
        jPanelInscricoes = new javax.swing.JPanel();
        adicionarAluno = new javax.swing.JButton();
        removerAluno = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setTitle("Cadastro Inscrições Evento");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("ID:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Nome Evento:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Descrição Evento:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Carga Horaria:");

        codigoEventoText.setEditable(false);
        codigoEventoText.setFocusable(false);

        recarregarEvento.setText("Recarregar");
        recarregarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recarregarEventoActionPerformed(evt);
            }
        });

        salvarEvento.setText("Salvar");
        salvarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarEventoActionPerformed(evt);
            }
        });

        fecharEvento.setText("Fechar");
        fecharEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharEventoActionPerformed(evt);
            }
        });

        jLabel5.setText("Template Certificado:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeEventoText)
                            .addComponent(descricaoEventoText)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(codigoEventoText, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 58, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cargaHorariaText, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(templateComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(salvarEvento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recarregarEvento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecharEvento)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fecharEvento, recarregarEvento, salvarEvento});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codigoEventoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nomeEventoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(descricaoEventoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cargaHorariaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(templateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recarregarEvento)
                    .addComponent(salvarEvento)
                    .addComponent(fecharEvento))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fecharEvento, recarregarEvento, salvarEvento});

        jPanelInscricoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Inscrições"));

        adicionarAluno.setText("Adicionar");
        adicionarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarAlunoActionPerformed(evt);
            }
        });

        removerAluno.setText("Remover");
        removerAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerAlunoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Aluno", "Presença"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(180);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(500);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
        }

        javax.swing.GroupLayout jPanelInscricoesLayout = new javax.swing.GroupLayout(jPanelInscricoes);
        jPanelInscricoes.setLayout(jPanelInscricoesLayout);
        jPanelInscricoesLayout.setHorizontalGroup(
            jPanelInscricoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInscricoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInscricoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInscricoesLayout.createSequentialGroup()
                        .addComponent(adicionarAluno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removerAluno)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanelInscricoesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {adicionarAluno, removerAluno});

        jPanelInscricoesLayout.setVerticalGroup(
            jPanelInscricoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInscricoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInscricoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adicionarAluno)
                    .addComponent(removerAluno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelInscricoesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {adicionarAluno, removerAluno});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 277, Short.MAX_VALUE))
            .addComponent(jPanelInscricoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelInscricoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fecharEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharEventoActionPerformed
        dispose();
    }//GEN-LAST:event_fecharEventoActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int linha = jTable1.getSelectedRow();
        if (linha != -1) {
            selectInscricao = listaInscricoes.get(linha);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void recarregarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recarregarEventoActionPerformed
        init();
    }//GEN-LAST:event_recarregarEventoActionPerformed

    private void removerAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerAlunoActionPerformed
        int confirmacao = JOptionPane.showOptionDialog(this,
                "Você realmente deseja excluir este registro?",
                "Confirmar Exclusão",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new Object[]{"Sim", "Não"},
                "Sim");

        if (confirmacao == 0) {
            int linha = jTable1.getSelectedRow();  // Obtém a linha selecionada
            if (linha != -1) {
                new InscricaoService().removeUserByEvento(listaInscricoes.get(linha));
                init();
            }
        }
    }//GEN-LAST:event_removerAlunoActionPerformed

    private void adicionarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarAlunoActionPerformed
        ViewUtils.exibeInternalFrame(desktopPane, new CadastroInscricao(entity));
        init();
    }//GEN-LAST:event_adicionarAlunoActionPerformed

    private void salvarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarEventoActionPerformed
        salvarRegistros();
    }//GEN-LAST:event_salvarEventoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarAluno;
    private javax.swing.JTextField cargaHorariaText;
    private javax.swing.JTextField codigoEventoText;
    private javax.swing.JTextField descricaoEventoText;
    private javax.swing.JButton fecharEvento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelInscricoes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nomeEventoText;
    private javax.swing.JButton recarregarEvento;
    private javax.swing.JButton removerAluno;
    private javax.swing.JButton salvarEvento;
    private javax.swing.JComboBox<String> templateComboBox;
    // End of variables declaration//GEN-END:variables

    private void init() {
        initFields();
        initInscricoes();
        populateComboBox(templateComboBox);
    }

    private void initFields() {
        codigoEventoText.setText(entity.getId());
        nomeEventoText.setText(entity.getNomeEvento());
        descricaoEventoText.setText(entity.getDescricaoEvento());
        cargaHorariaText.setText(String.valueOf(entity.getCargaHoraria()));
    }

    private void initInscricoes() {
        clearJTable();
        listaInscricoes = new InscricaoService().findByEvento(entity);
        if (!listaInscricoes.isEmpty()) {

            // Definir os dados da tabela: Colunas e Linhas
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            // Preencher as linhas da tabela com os dados dos usuários
            for (Inscricao evento : listaInscricoes) {
                Object[] rowData = {
                    evento.getUsuarioId(),
                    evento.getNomeAluno(),
                    evento.isPresente() ? "SIM" : "NÃO"
                };
                model.addRow(rowData);
            }

        }
    }

    private void clearJTable() {
        DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
        for (int a1 = m.getRowCount(); a1 > 0; --a1) {
            m.removeRow(a1 - 1);
        }
    }

    private void salvarRegistros() {
        Evento e = new Evento();
        e.setNomeEvento(nomeEventoText.getText().trim());
        e.setDescricaoEvento(descricaoEventoText.getText().trim());
        e.setCargaHoraria(Float.parseFloat(cargaHorariaText.getText()));
        e.setTemplateId(listaTemplate.get(templateComboBox.getSelectedIndex()).getId());

        if (Objects.nonNull(entity)) {
            e.setId(entity.getId());
            new EventoService().updateEvento(e);
        } else {
            new EventoService().salvarEvento(e);
        }
        dispose();
    }

    private void populateComboBox(JComboBox<String> combo) {
        listaTemplate = new EventoService().findTemplate();
        if (!listaTemplate.isEmpty()) {
            combo.removeAllItems();
            for (Template template : listaTemplate) {
                combo.addItem(template.getNomeTemplate());
            }
        }
    }

}
